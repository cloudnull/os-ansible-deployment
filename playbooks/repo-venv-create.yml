---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This play was built to seed an environment with packages that may be used
# from within the environment as found from a given mirror_source_host.
# Currently the mirror source host is set to the Rackspace build servers but
# could be targeted to wherever you'd like.

- name: Create virtual environments for all os_* roles
  hosts: repo_all[0]
  gather_facts: true
  user: root
  tasks:
    - name: Load local packages
      debug:
        msg: "Loading Packages"
      with_py_pkgs: ../
      no_log: true
      register: local_packages
      tags:
        - repo-create-venv-archive
        - repo-venv-compress-archive

    - name: Make sure old venv build directories are clean
      file:
        path: "{{ item }}"
        state: "absent"
        group: "www-data"
        owner: "nginx"
        mode: "2755"
      with_items:
        - "{{ repo_build_dir }}"
      tags:
        - repo-create-venv-location
        - repo-venv-compress-archive
        - repo-create-venv-archive

    - name: Destroy base venvs to rebuild them
      file:
        path: "{{ repo_venv_dir }}/{{ repo_release_tag }}/{{ ansible_distribution | lower }}"
        state: "absent"
      when: repo_venv_force_rebuild | bool
      tags:
        - repo-create-venv-location
        - repo-venv-compress-archive
        - repo-create-venv-archive

    - name: Create venv directory
      file:
        path: "{{ item }}"
        state: "directory"
        group: "www-data"
        owner: "nginx"
        mode: "2755"
      with_items:
        - "{{ repo_build_dir }}/venvs"
        - "{{ repo_venv_dir }}/{{ repo_release_tag }}/{{ ansible_distribution | lower }}"
      tags:
        - repo-create-venv-location
        - repo-venv-compress-archive
        - repo-create-venv-archive

    - name: Install virtualenv
      pip:
        name: "virtualenv"
        state: present
        extra_args: "{{ repo_pip_install_options }}"
      register: virtualenv_install
      until: virtualenv_install|success
      retries: 5
      delay: 2
      tags:
        - repo-create-venv

    - name: Get venv command path
      command: which virtualenv
      register: virtualenv_path
      tags:
        - repo-command-bin
        - repo-create-venv

    - name: Set virtualenv command path
      set_fact:
        virtualenv_bin: "{{ virtualenv_path.stdout }}"
      tags:
        - repo-command-bin
        - repo-create-venv

    - name: Check if for created venvs
      command: >
        ls -1 "{{ repo_venv_dir }}/{{ repo_release_tag }}/{{ ansible_distribution | lower }}/"
      register: created_venvs
      tags:
        - repo-create-venv

    - name: Set existing venv fact
      set_fact:
        existing_venvs: "{{ created_venvs.stdout_lines }}"
      tags:
        - repo-command-bin
        - repo-create-venv

    - name: Create role venv
      pip:
        name: "{{ item.value | join(' ') }}"
        state: present
        virtualenv: "{{ repo_build_dir }}/venvs/{{ item.key | replace('os_', '') }}"
        virtualenv_site_packages: "no"
        virtualenv_command: "{{ virtualenv_bin }} --always-copy"
        extra_args: "{{ repo_pip_install_options }}"
      register: install_packages
      until: install_packages|success
      retries: 5
      delay: 2
      with_dict: local_packages.results.0.item.role_packages
      when:
        - '"os_" in item.key'
        - "'{{ item.key | replace('os_', '') }}.tgz' not in existing_venvs"
      tags:
        - repo-create-venv

    # This is not using the file module because we want the link to be relative
    - name: Create venv archive
      shell: |
        tar -czf "{{ item.key | replace('os_', '') }}.tgz" \
            -C "{{ repo_build_dir }}/venvs/{{ item.key | replace('os_', '') }}" .
      args:
        chdir: "{{ repo_venv_dir }}/{{ repo_release_tag }}/{{ ansible_distribution | lower }}"
        creates: "{{ repo_venv_dir }}/{{ repo_release_tag }}/{{ ansible_distribution | lower }}/{{ item.key | replace('os_', '') }}.tgz"
      with_dict: local_packages.results.0.item.role_packages
      when:
        - '"os_" in item.key'
      tags:
        - skip_ansible_lint
        - repo-venv-compress-archive
        - repo-create-venv-archive

    - name: Cleanup venv directory
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ repo_build_dir }}"
      tags:
        - repo-cleanup-venv-location

  vars:
    repo_venv_force_rebuild: false
    repo_build_dir: "/tmp/openstack-venv-builder"
    repo_release_tag: "{{ openstack_release }}"
    repo_venv_dir: "/var/www/repo/venvs"
    repo_release_path: "/var/www/repo/os-releases"
    repo_pip_install_options: >
      --timeout 120
      --find-links {{ repo_release_path }}/{{ repo_release_tag }}
      --no-index
      --verbose
      --log /var/log/repo/repo_venv_builder.log

---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create base container network
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      echo -e '{{ lxc_container_default_interfaces_ubuntu }}' | tee /etc/network/interfaces
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-create

- name: Container network interfaces
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      if [ ! -d "/etc/network/interfaces.d" ];then
        mkdir -p /etc/network/interfaces.d
      fi
      echo -e '{{ lxc_container_interface_ubuntu }}' | tee /etc/network/interfaces.d/{{ item.value.interface }}.cfg
  with_dict: container_networks
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-networks

# Resets the container user's password using lxc_container because Python2.7
#  may not be installed at this point.
- name: Force container user password set
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      getent passwd "{{ lxc_container_user_name }}" &&
      echo "{{ lxc_container_user_name }}:{{ lxc_container_user_password }}" | chpasswd
  delegate_to: "{{ physical_host }}"
  no_log: True
  tags:
    - lxc-container-user-password-regen

# Uses lxc_container because the repos need to be available before python2.7 is installed
#  and python2.7 may not be installed at this point.
- name: Create main apt repos
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      # Configure defined apt-repos
      rm /etc/apt/sources.list
      echo '# Sources created by the ansible' | tee /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_main_apt_repo }} {{ lxc_container_release }} main restricted universe multiverse' | tee -a /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_main_apt_repo }} {{ lxc_container_release }}-updates main restricted universe multiverse' | tee -a /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_main_apt_repo }} {{ lxc_container_release }}-backports main restricted universe multiverse' | tee -a /etc/apt/sources.list
      echo 'deb {{ lxc_container_template_security_apt_repo }} {{ lxc_container_release }}-security main restricted universe multiverse' | tee -a /etc/apt/sources.list
      for i in {1..3};do
        timeout 60 sh -c "/usr/bin/apt-get update && /usr/bin/apt-key update"
        if [ "$?" == 0 ];then
          break
        else
          if [ ! "$i" == "3" ];then
            echo "Failure to update on attempt $i retrying..."
            /usr/bin/apt-get clean
            sleep 2
          else
            echo 'Failed to update'
            exit 99
          fi
        fi
      done
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-sources

# Update the container and ensure that its all patched. This is using lxc_container
#  because python2.7 may not be installed at this point.
- name: Ensure container is updated
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      apt-get -y upgrade
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-upgrade

# Uses lxc_container because python2.7 may not be installed within the container at this point.
- name: Ensure python is installed and is default 2.7
  lxc_container:
    name: "{{ inventory_hostname }}"
    container_command: |
      apt-get -y install python2.7
      rm /usr/bin/python
      ln -s /usr/bin/python2.7 /usr/bin/python
  delegate_to: "{{ physical_host }}"
  tags:
    - lxc-container-python
